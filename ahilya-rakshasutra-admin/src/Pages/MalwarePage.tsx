import { useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";

const API_BASE = import.meta.env.VITE_API_BASE ?? "http://127.0.0.1:8000";

interface MalwareResult {
  apk_file: string;
  package_name: string;
  file_size: number;
  prediction: string;
  malicious_confidence: number;
  benign_confidence: number;
  risk_level: string;
  error?: string;
}

export default function MalwarePage() {
  const navigate = useNavigate();
  const [apks, setApks] = useState<string[]>([]);
  const [results, setResults] = useState<MalwareResult[]>([]);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);

  async function loadApks() {
    try {
      const r = await fetch(`${API_BASE}/malware/list-apks`);
      const body = await r.json();
      setApks(body.apks || []);
    } catch (e: any) {
      setError("Failed to load APK list: " + e.message);
    }
  }

  async function scanFile(name: string) {
    setLoading(true);
    try {
      const r = await fetch(
        `${API_BASE}/malware/scan-file?filename=${encodeURIComponent(name)}`
        , { method: "POST" }
      );
      const body = await r.json();
      setResults([body, ...results]);
    } catch (e: any) {
      setError("Scan failed: " + e.message);
    } finally {
      setLoading(false);
    }
  }

  async function scanAll() {
    setLoading(true);
    try {
      const r = await fetch(`${API_BASE}/malware/scan-all`, { method: "POST" });
      const body = await r.json();
      setResults(body.results || []);
    } catch (e: any) {
      setError("Scan all failed: " + e.message);
    } finally {
      setLoading(false);
    }
  }

  useEffect(() => {
    loadApks();
  }, []);

  return (
    <div className="min-h-screen bg-[#fff4e9] overflow-hidden">
      <div className="bg-[#e07b3a] shadow">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex items-center justify-between h-20">
            {/* Left: Logos + Title */}
            <div className="flex items-center space-x-6">
              <div className="w-16 h-16 rounded-full flex items-center justify-center shadow border border-[#f2c197] bg-white overflow-hidden">
                <img src="/images/ahilya-logo.png" alt="Ahilya Logo" className="object-contain w-full h-full" />
              </div>
              <div className="text-white">
                <h1 className="text-2xl font-bold">अहिल्या रक्षासूत्र</h1>
                <p className="text-sm">Ahilya RakshaSutra - Indore Fraud Detection System</p>
              </div>
            </div>

            {/* Right: Honeypot + Back + IMC */}
            <div className="flex items-center space-x-4">
              

              <button
                onClick={() => navigate("/")}
                className="px-4 py-2 rounded-xl font-semibold bg-[#fff9f3] border border-[#f2c197] shadow text-[#4a2e05] hover:bg-white transition"
                title="Back to Dashboard"
              >
                Back to Dashboard
              </button>

              <div className="w-16 h-16 rounded-full flex items-center justify-center shadow border border-[#f2c197] bg-[#fff9f3] overflow-hidden">
                <img src="/images/imc-logo.png" alt="IMC Logo" className="object-contain w-full h-full" />
              </div>
              <div className="text-white text-right">
                <p className="text-sm font-medium">Indore Municipal Corporation</p>
                <p className="text-xs">इंदौर नगर निगम</p>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Main content */}
      <div className="p-6">
        <h2 className="text-xl font-semibold text-[#4a2e05] mb-4">Malware Scan</h2>

        {error && <p className="text-red-600">{error}</p>}

        <div className="flex gap-2 mb-4">
          <button
            onClick={scanAll}
            disabled={loading}
            className="px-4 py-2 rounded-md bg-[#e07b3a] text-white shadow"
          >
            {loading ? "Scanning…" : "Scan All APKs"}
          </button>
          <button
            onClick={loadApks}
            disabled={loading}
            className="px-4 py-2 rounded-md border border-[#f2c197] bg-[#fff9f3] text-[#4a2e05]"
          >
            Refresh List
          </button>
        </div>

        <div className="grid grid-cols-2 gap-6">
          {/* APK List */}
          <div className="border border-[#f2c197] rounded-lg p-4 bg-[#fffdfb]">
            <h3 className="font-medium text-[#4a2e05] mb-2">Uploaded APKs</h3>
            <ul>
              {apks.map((a) => (
                <li key={a} className="flex justify-between items-center border-b border-[#f2c197] py-1">
                  <span>{a}</span>
                  <button
                    onClick={() => scanFile(a)}
                    disabled={loading}
                    className="px-2 py-1 text-sm rounded bg-[#e07b3a] text-white"
                  >
                    Scan
                  </button>
                </li>
              ))}
            </ul>
          </div>

          {/* Results */}
          <div className="border border-[#f2c197] rounded-lg p-4 bg-[#fffdfb]">
            <h3 className="font-medium text-[#4a2e05] mb-2">Results</h3>
            <ul>
              {results.map((r, i) => (
                <li key={i} className="mb-3 border-b border-[#f2c197] pb-2">
                  {r.error ? (
                    <span className="text-red-600">{r.error}</span>
                  ) : (
                    <>
                      <p><strong>{r.apk_file}</strong> → {r.prediction}</p>
                      <p className="text-sm text-[#4a2e05]">
                        Confidence: {Math.round(r.malicious_confidence * 100)}% malicious
                      </p>
                      <p className="text-sm">Risk Level: {r.risk_level}</p>
                    </>
                  )}
                </li>
              ))}
            </ul>
          </div>
        </div>
      </div>
    </div>
  );
}
